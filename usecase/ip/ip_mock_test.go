// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/almanalfaruq/unblocker/usecase/ip (interfaces: RepoIPIface,RepoFileIface,RepoCommandIface)

// Package ip is a generated GoMock package.
package ip

import (
	model "github.com/almanalfaruq/unblocker/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepoIPIface is a mock of RepoIPIface interface
type MockRepoIPIface struct {
	ctrl     *gomock.Controller
	recorder *MockRepoIPIfaceMockRecorder
}

// MockRepoIPIfaceMockRecorder is the mock recorder for MockRepoIPIface
type MockRepoIPIfaceMockRecorder struct {
	mock *MockRepoIPIface
}

// NewMockRepoIPIface creates a new mock instance
func NewMockRepoIPIface(ctrl *gomock.Controller) *MockRepoIPIface {
	mock := &MockRepoIPIface{ctrl: ctrl}
	mock.recorder = &MockRepoIPIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepoIPIface) EXPECT() *MockRepoIPIfaceMockRecorder {
	return m.recorder
}

// GetListIP mocks base method
func (m *MockRepoIPIface) GetListIP(arg0 string) (model.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListIP", arg0)
	ret0, _ := ret[0].(model.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetListIP indicates an expected call of GetListIP
func (mr *MockRepoIPIfaceMockRecorder) GetListIP(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListIP", reflect.TypeOf((*MockRepoIPIface)(nil).GetListIP), arg0)
}

// MockRepoFileIface is a mock of RepoFileIface interface
type MockRepoFileIface struct {
	ctrl     *gomock.Controller
	recorder *MockRepoFileIfaceMockRecorder
}

// MockRepoFileIfaceMockRecorder is the mock recorder for MockRepoFileIface
type MockRepoFileIfaceMockRecorder struct {
	mock *MockRepoFileIface
}

// NewMockRepoFileIface creates a new mock instance
func NewMockRepoFileIface(ctrl *gomock.Controller) *MockRepoFileIface {
	mock := &MockRepoFileIface{ctrl: ctrl}
	mock.recorder = &MockRepoFileIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepoFileIface) EXPECT() *MockRepoFileIfaceMockRecorder {
	return m.recorder
}

// WriteToFile mocks base method
func (m *MockRepoFileIface) WriteToFile(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteToFile", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteToFile indicates an expected call of WriteToFile
func (mr *MockRepoFileIfaceMockRecorder) WriteToFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteToFile", reflect.TypeOf((*MockRepoFileIface)(nil).WriteToFile), arg0, arg1)
}

// MockRepoCommandIface is a mock of RepoCommandIface interface
type MockRepoCommandIface struct {
	ctrl     *gomock.Controller
	recorder *MockRepoCommandIfaceMockRecorder
}

// MockRepoCommandIfaceMockRecorder is the mock recorder for MockRepoCommandIface
type MockRepoCommandIfaceMockRecorder struct {
	mock *MockRepoCommandIface
}

// NewMockRepoCommandIface creates a new mock instance
func NewMockRepoCommandIface(ctrl *gomock.Controller) *MockRepoCommandIface {
	mock := &MockRepoCommandIface{ctrl: ctrl}
	mock.recorder = &MockRepoCommandIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepoCommandIface) EXPECT() *MockRepoCommandIfaceMockRecorder {
	return m.recorder
}

// RunFlushDNS mocks base method
func (m *MockRepoCommandIface) RunFlushDNS() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunFlushDNS")
	ret0, _ := ret[0].(error)
	return ret0
}

// RunFlushDNS indicates an expected call of RunFlushDNS
func (mr *MockRepoCommandIfaceMockRecorder) RunFlushDNS() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunFlushDNS", reflect.TypeOf((*MockRepoCommandIface)(nil).RunFlushDNS))
}
